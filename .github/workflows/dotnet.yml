# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test with Coverage
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --verbosity normal
    - name: Check Coverage Report
      run: |
        if [ -s TestProject1/TestResults/*/coverage.cobertura.xml ]; then
          echo "Coverage report generated successfully."
        else
          echo "Coverage report is empty or not generated."
          exit 1
        fi
    - name: Extract Coverage Percentage (PowerShell)
      id: coverage
      shell: pwsh
      run: |
        $xmlPath = Get-ChildItem -Path TestProject1/TestResults/*/coverage.cobertura.xml
        [xml]$xml = Get-Content $xmlPath.FullName
        $lineRate = [double]$xml.coverage.'@line-rate'
        Write-Host "Line Coverage Rate: $lineRate"
        echo "line_rate=$lineRate" >> $GITHUB_ENV
    - name: Fail if Coverage is Below Threshold (PowerShell)
      shell: pwsh
      run: |
        if ($line_rate -lt 0.70) {
          Write-Host "Code coverage is below the threshold of 70%."
          exit 1
        }
    - name: Clean Old Test Results
      run: |
        echo "Cleaning up old test results..."
        find TestProject1/TestResults -type f -mtime +7 -exec rm {} \;
